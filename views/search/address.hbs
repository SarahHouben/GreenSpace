<div id="map" class="search-map"></div>
 <div class="panel">
      <h2>GreenSpaces at your address</h2>
  </div>
<script async defer
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDYLwxbUeRyQSlAjR9qLXh3pnr4TFCAIW0&callback=initMap">
  </script>
<script>
  var map, infoWindow, marker;
  function initMap() {
    map = new google.maps.Map(document.getElementById('map'), {
      center: { lat: 52.520008, lng: 13.404954 },
      zoom: 14,
      styles:[
  {
    "elementType": "geometry",
    "stylers": [
      {
        "color": "#ebe3cd"
      }
    ]
  },
  {
    "elementType": "labels.text.fill",
    "stylers": [
      {
        "color": "#523735"
      }
    ]
  },
  {
    "elementType": "labels.text.stroke",
    "stylers": [
      {
        "color": "#f5f1e6"
      }
    ]
  },
  {
    "featureType": "administrative",
    "elementType": "geometry.stroke",
    "stylers": [
      {
        "color": "#c9b2a6"
      }
    ]
  },
  {
    "featureType": "administrative.land_parcel",
    "elementType": "geometry.stroke",
    "stylers": [
      {
        "color": "#dcd2be"
      }
    ]
  },
  {
    "featureType": "administrative.land_parcel",
    "elementType": "labels",
    "stylers": [
      {
        "visibility": "off"
      }
    ]
  },
  {
    "featureType": "administrative.land_parcel",
    "elementType": "labels.text.fill",
    "stylers": [
      {
        "color": "#ae9e90"
      }
    ]
  },
  {
    "featureType": "landscape.natural",
    "elementType": "geometry",
    "stylers": [
      {
        "color": "#dfd2ae"
      }
    ]
  },
  {
    "featureType": "poi",
    "elementType": "geometry",
    "stylers": [
      {
        "color": "#dfd2ae"
      }
    ]
  },
  {
    "featureType": "poi",
    "elementType": "labels.text",
    "stylers": [
      {
        "visibility": "off"
      }
    ]
  },
  {
    "featureType": "poi",
    "elementType": "labels.text.fill",
    "stylers": [
      {
        "color": "#93817c"
      }
    ]
  },
  {
    "featureType": "poi.business",
    "stylers": [
      {
        "visibility": "off"
      }
    ]
  },
  {
    "featureType": "poi.park",
    "elementType": "geometry.fill",
    "stylers": [
      {
        "color": "#a5b076"
      }
    ]
  },
  {
    "featureType": "poi.park",
    "elementType": "labels.text.fill",
    "stylers": [
      {
        "color": "#447530"
      }
    ]
  },
  {
    "featureType": "road",
    "elementType": "geometry",
    "stylers": [
      {
        "color": "#f5f1e6"
      }
    ]
  },
  {
    "featureType": "road",
    "elementType": "labels.icon",
    "stylers": [
      {
        "visibility": "off"
      }
    ]
  },
  {
    "featureType": "road.arterial",
    "elementType": "geometry",
    "stylers": [
      {
        "color": "#fdfcf8"
      }
    ]
  },
  {
    "featureType": "road.highway",
    "elementType": "geometry",
    "stylers": [
      {
        "color": "#f8c967"
      }
    ]
  },
  {
    "featureType": "road.highway",
    "elementType": "geometry.stroke",
    "stylers": [
      {
        "color": "#e9bc62"
      }
    ]
  },
  {
    "featureType": "road.highway.controlled_access",
    "elementType": "geometry",
    "stylers": [
      {
        "color": "#e98d58"
      }
    ]
  },
  {
    "featureType": "road.highway.controlled_access",
    "elementType": "geometry.stroke",
    "stylers": [
      {
        "color": "#db8555"
      }
    ]
  },
  {
    "featureType": "road.local",
    "elementType": "labels",
    "stylers": [
      {
        "visibility": "off"
      }
    ]
  },
  {
    "featureType": "road.local",
    "elementType": "labels.text.fill",
    "stylers": [
      {
        "color": "#806b63"
      }
    ]
  },
  {
    "featureType": "transit",
    "stylers": [
      {
        "visibility": "off"
      }
    ]
  },
  {
    "featureType": "transit.line",
    "elementType": "geometry",
    "stylers": [
      {
        "color": "#dfd2ae"
      }
    ]
  },
  {
    "featureType": "transit.line",
    "elementType": "labels.text.fill",
    "stylers": [
      {
        "color": "#8f7d77"
      }
    ]
  },
  {
    "featureType": "transit.line",
    "elementType": "labels.text.stroke",
    "stylers": [
      {
        "color": "#ebe3cd"
      }
    ]
  },
  {
    "featureType": "transit.station",
    "elementType": "geometry",
    "stylers": [
      {
        "color": "#dfd2ae"
      }
    ]
  },
  {
    "featureType": "water",
    "elementType": "geometry.fill",
    "stylers": [
      {
        "color": "#b9d3c2"
      }
    ]
  },
  {
    "featureType": "water",
    "elementType": "labels.text.fill",
    "stylers": [
      {
        "color": "#92998d"
      }
    ]
  }
]
    });

    var image = 'https://res.cloudinary.com/dmlqhwwfc/image/upload/v1568720489/GreenSpace/greenspace_logo_small_70pxW_jbnsv9.png'

    //prettier-ignore
    let data = {{{ array }}};
   
   

  //console.log(data)
  let marker = data.map(el => new google.maps.Marker({

    position: { lat: el.location.lat, lng: el.location.lng },
    map: map,
    icon: image,
    title: el._id,
    animation: google.maps.Animation.DROP
  }

  )

  )

   

  axios.get('/search/address').then((response) => {
    var places = response.data.places;
    var images = response.data.images;
    //console.log(images)
    marker.forEach((markerUnit, i) => {
 
      let greenspaceData = places.filter(function (data) {
        return data._id === markerUnit.title;
      });
      let imageData = images.filter(function (data) {
        return data.greenspace === markerUnit.title;
      });

      let service = new google.maps.DistanceMatrixService();
    
service.getDistanceMatrix(
  {
    origins: [{
  lat : {{ data.lat }}, 
   lng : {{ data.lng }} 
}],
    destinations: [{
  lat : greenspaceData[0].location.lat, 
   lng : greenspaceData[0].location.lng 
}],
    travelMode: 'WALKING',
  }, callback)


 function callback(response, status) {
  if (status == 'OK') {
    var origins = response.originAddresses;
    
    var destinations = response.destinationAddresses;

    for (var i = 0; i < origins.length; i++) {
      var results = response.rows[i].elements;
      for (var j = 0; j < results.length; j++) {
        var element = results[j];
        var distance = element.distance.text;
        var duration = element.duration.text;
        var from = origins[i];
        var to = destinations[j];
      }
    }
  }

  

              
      var img;
      let dist = response.rows[0].elements[0].distance.text
      let time = response.rows[0].elements[0].duration.text
      
      let greenLat = greenspaceData[0].location.lat
      let greenLng = greenspaceData[0].location.lng
      let name = greenspaceData[0].name.toUpperCase();
      let id = greenspaceData[0]._id;
      if (imageData.length === 0) {
        img = "https://res.cloudinary.com/dmlqhwwfc/image/upload/v1568704142/GreenSpace/default_greenspace_image.jpg"
      } else {
        img = imageData[0].image;
      };


      var contentString = `<div class="popup-section"><h4>${name}</h4><img class="popup-image" src=${img} alt="GreenSpace"><a class="popup-link" href="/greenspace/${id}"><div class="pop-btn"><button class="popup-button">More Info</button></a><button class="popup-button"><a target="_blank" href="https://www.google.com/maps/dir/?api=1&origin={{ data.lat }},{{ data.lng }}&destination=${greenLat},${greenLng}&travelmode=walking">Navigate</a></button> </div></div><div class="popup-div"><p>Distance: ${dist}</p><p class="p-bottom">Time on foot: ${time}</p></div>`;


      var infowindow = new google.maps.InfoWindow({
        content: contentString
      });
       var toggle = true;
       markerUnit.addListener('click', () =>{ 
       if(toggle){
      infowindow.open(map, markerUnit)
      toggle = false;
      }else{
        infowindow.close(map, markerUnit)
        toggle =true;
      }
       
       });
       
}


  

    })
    





    infoWindow = new google.maps.InfoWindow;
    // Try HTML5 geolocation.
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function (position) {
        var pos = {
          lat: {{ data.lat }},
        lng: {{ data.lng }}
  };
   let img = `{{{ user.image }}}`
      //========================= style profile image with class ===================================
        let styling = `<img class="popup-profile-image" src="${img}" >`
  infoWindow.setPosition(pos);
  infoWindow.setContent(styling);
  infoWindow.open(map);
  map.setCenter(pos);
    }, function () {
    handleLocationError(true, infoWindow, map.getCenter());
  });
  } else {
    // Browser doesn't support Geolocation
    handleLocationError(false, infoWindow, map.getCenter());
  }
  function handleLocationError(browserHasGeolocation, infoWindow, pos) {
    infoWindow.setPosition(pos);
    infoWindow.setContent(browserHasGeolocation ?
      'Error: The Geolocation service failed.' :
      'Error: Your browser doesn\'t support geolocation.');
    infoWindow.open(map);
  }
    
    
  
  })
   }
//axios

  


</script>